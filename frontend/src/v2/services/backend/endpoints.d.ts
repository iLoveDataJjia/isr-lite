/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/queries/v1/app/cards": {
    /** Get cards */
    get: operations["__queries_v1_app_cards_get"];
  };
  "/queries/v1/app/cards/thumbnail/{image_id}.webp": {
    /** Card thumbnail (144x144) */
    get: operations["__queries_v1_app_cards_thumbnail__image_id__webp_get"];
  };
  "/queries/v1/app/cards/download": {
    /** Download image */
    get: operations["__queries_v1_app_cards_download_get"];
  };
  "/commands/v1/images/upload-local": {
    /** Upload local images */
    post: operations["__commands_v1_images_upload_local_post"];
  };
  "/commands/v1/images/{image_id}/delete": {
    /** Delete image */
    delete: operations["__commands_v1_images__image_id__delete_delete"];
  };
  "/commands/v1/images/{image_id}/process/run": {
    /** Run process */
    post: operations["__commands_v1_images__image_id__process_run_post"];
  };
  "/commands/v1/images/{image_id}/process/retry": {
    /** Retry latest process */
    post: operations["__commands_v1_images__image_id__process_retry_post"];
  };
  "/commands/v1/images/{image_id}/process/stop": {
    /** Stop latest process */
    delete: operations["__commands_v1_images__image_id__process_stop_delete"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** AI */
    AI: {
      /**
       * Type
       * @constant
       */
      type: "AI";
      /**
       * Scale
       * @enum {integer}
       */
      scale: 2 | 3 | 4;
    };
    /** Bicubic */
    Bicubic: {
      /**
       * Type
       * @constant
       */
      type: "Bicubic";
      /** Preserve Ratio */
      preserve_ratio: boolean;
      target: components["schemas"]["Dimension"];
    };
    /** Body___commands_v1_images_upload_local_post */
    Body___commands_v1_images_upload_local_post: {
      /** Files */
      files: string[];
    };
    /** CardMod */
    CardMod: {
      /** Thumbnail Src */
      thumbnail_src: string;
      /** Name */
      name: string;
      source: components["schemas"]["Dimension"];
      target: components["schemas"]["Dimension"] | null;
      /** Status */
      status:
        | components["schemas"]["Runnable"]
        | components["schemas"]["Stoppable"]
        | components["schemas"]["Errored"]
        | components["schemas"]["Downloadable"];
      /**
       * Extension
       * @enum {string}
       */
      extension: "JPEG" | "PNG" | "WEBP";
      /** Scaling */
      scaling: components["schemas"]["Bicubic"] | components["schemas"]["AI"];
      /** Image Id */
      image_id: number;
    };
    /** Dimension */
    Dimension: {
      /** Width */
      width: number;
      /** Height */
      height: number;
    };
    /** Downloadable */
    Downloadable: {
      /**
       * Type
       * @constant
       */
      type: "Downloadable";
      /** Image Src */
      image_src: string;
    };
    /** Errored */
    Errored: {
      /**
       * Type
       * @constant
       */
      type: "Errored";
      /** Duration */
      duration: number;
      /** Error */
      error: string;
    };
    /**
     * ExtensionVal
     * @enum {string}
     */
    ExtensionVal: "JPEG" | "PNG" | "WEBP";
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** ProcessAIVal */
    ProcessAIVal: {
      /**
       * Scale
       * @enum {integer}
       */
      scale: 2 | 3 | 4;
    };
    /** ProcessBicubicVal */
    ProcessBicubicVal: {
      target: components["schemas"]["ProcessResolutionVal"];
    };
    /** ProcessDto */
    ProcessDto: {
      extension: components["schemas"]["ExtensionVal"];
      /** Scaling */
      scaling:
        | components["schemas"]["ProcessBicubicVal"]
        | components["schemas"]["ProcessAIVal"];
    };
    /** ProcessResolutionVal */
    ProcessResolutionVal: {
      /** Width */
      width: number;
      /** Height */
      height: number;
    };
    /** Runnable */
    Runnable: {
      /**
       * Type
       * @constant
       */
      type: "Runnable";
    };
    /** Stoppable */
    Stoppable: {
      /**
       * Type
       * @constant
       */
      type: "Stoppable";
      /**
       * Started At
       * Format: date-time
       */
      started_at: string;
      /** Duration */
      duration: number;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  /** Get cards */
  __queries_v1_app_cards_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CardMod"][];
        };
      };
    };
  };
  /** Card thumbnail (144x144) */
  __queries_v1_app_cards_thumbnail__image_id__webp_get: {
    parameters: {
      path: {
        image_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Download image */
  __queries_v1_app_cards_download_get: {
    parameters: {
      query: {
        image_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Upload local images */
  __commands_v1_images_upload_local_post: {
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body___commands_v1_images_upload_local_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete image */
  __commands_v1_images__image_id__delete_delete: {
    parameters: {
      path: {
        image_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Run process */
  __commands_v1_images__image_id__process_run_post: {
    parameters: {
      path: {
        image_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProcessDto"];
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Retry latest process */
  __commands_v1_images__image_id__process_retry_post: {
    parameters: {
      path: {
        image_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Stop latest process */
  __commands_v1_images__image_id__process_stop_delete: {
    parameters: {
      path: {
        image_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
